{"version":3,"sources":["logo.svg","component/Loader/Loader.js","component/ErrorComponent/Error.js","component/Description/Description.js","component/Picture/Picture.js","component/Listing/Listing.js","component/Visual/Visual.js","component/Instructions/Instructions.js","component/Title/Title.js","component/DotLoader/DotLoader.js","component/Ð¡octail/Coctail.js","container/ContainerItemComp/ContainerItemComp.js","container/ContainerComp/ContainerComp.js","constants.js","component/ListingItem/ListingItem.js","component/ListingEl/ListingEl.js","component/Input/Input.js","component/RadioButton/RadioButton.js","component/Form/Form.js","component/Button/Button.js","component/Search/Search.js","container/Alco.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Loader","className","Error","Description","descr","Picture","src","alt","Listing","title","ingredients","onClick","map","item","index","key","Visual","title_ingridients","glass","Instructions","instruction","Title","name","description","classes","classnames","DotLoader","class","Coctail","alcoholic","error","onClickIngredient","reload","alco","ContainerItemComp","children","ContainerComp","toJSON","response","json","ListingItem","ListingEl","listing","prefix","useState","spisok","setSpisok","loading","setLoading","useEffect","getIngredientList","a","async","fetch","then","ingList","drinks","listItem","strDrink","strIngredient1","Input","onChange","onKeyPress","value","type","checked","id","placeholder","errorClass","RadioButton","label","Math","random","toFixed","htmlFor","Form","Button","text","Search","radiodata","inputdata","clear","Alco","setRandom","searchCoctailInput","setSearchCoctailInput","setError","coctailList","setCoctailList","searchOption","setSearchOption","coctailReload","setCoctailReload","getRandomCoctail","searchCoctailByIngredient","console","log","setTimeout","searchCoctail","coctail","ingredient","ingridient","Object","entries","filter","substr","push","getIngredient","finalCoctailSearch","input","RadioData","InputData","e","target","strDrinkThumb","strAlcoholic","strGlass","strInstructions","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.39504f39.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React from 'react'\r\nimport './Loader.css'\r\nconst Loader = () => (<div className=\"lds-ripple\"><div></div><div></div></div> )\r\n\r\nexport default Loader","import React from 'react'\r\n\r\nconst Error = () => {\r\n    return(\r\n        <div className=\"error-coctail\">\r\n                <h3>You enter wrong name, please try again</h3>\r\n        </div>\r\n    )\r\n}\r\nexport default Error","import React from 'react'\r\n\r\nconst Description = ({descr}) => <span>Glass: {descr}</span>\r\n\r\nexport default Description","import React from 'react'\r\n\r\nconst Picture = ({src}) => {\r\n\r\n    return(\r\n        <div className='image'>\r\n            <img src={src} alt=\"\"/>\r\n        </div>\r\n    )\r\n}\r\nexport default Picture","import React from 'react'\r\n\r\nconst Listing = ({title,ingredients, onClick}) =>{\r\n    \r\n    return(\r\n        <div className=\"listing\">\r\n            <h4>{title}</h4>\r\n            \r\n            <div className='p-container'>\r\n            {ingredients.map((item, index)=>{\r\n                return <p key={index+2} onClick={()=>onClick(item)}>{index+1}. {item}</p>\r\n            })}\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\nexport default Listing","import React from 'react'\r\nimport Description from '../Description/Description'\r\nimport Pictire from '../Picture/Picture'\r\nimport Listing from '../Listing/Listing'\r\nconst Visual = ({title_ingridients,ingredients, glass, src, onClick}) =>{\r\n    return (\r\n        <div className='visual'>\r\n            <div className=\"visual_item\">\r\n                <Pictire src={src}/>\r\n                <Description descr={glass}/>\r\n            </div>\r\n            <div className=\"visual_item\">\r\n                <Listing \r\n                    onClick={onClick}\r\n                    title={title_ingridients}\r\n                    ingredients={ingredients}/>\r\n                    \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Visual","import React from 'react'\r\n\r\nconst Instructions = ({title,instruction}) => {\r\n    return(\r\n        <div className=\"instructions\">\r\n            <span>{title}</span>\r\n            <p>{instruction}</p>\r\n        </div>\r\n    )\r\n}\r\nexport default Instructions","import React from 'react'\r\nimport classnames from 'classnames'\r\n\r\nconst Title = ({name, description, className}) => {\r\n    const classes = classnames('title', className)\r\n    return(\r\n        <div className={classes}>\r\n            <h2>{name}</h2>\r\n            <span>{description}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Title","import React from 'react'\r\nimport './DotLoader.css'\r\nconst DotLoader =()=>{\r\n    return(\r\n        <div class=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>\r\n    )\r\n}\r\nexport default DotLoader","import React, { useState } from 'react'\r\nimport './Coctail.css'\r\nimport Error from '../ErrorComponent/Error'\r\nimport Visual from '../Visual/Visual'\r\nimport Instructions from '../Instructions/Instructions'\r\nimport Title from '../Title/Title'\r\nimport DotLoader from '../DotLoader/DotLoader'\r\n// import {\r\n//     CSSTransition,\r\n//     TransitionGroup,\r\n//   } from 'react-transition-group';\r\nimport classnames from 'classnames'\r\nconst Coctail = ({src, name, alcoholic, glass, instruction, ingredients, error, onClickIngredient, reload}) => {\r\n    const alco = alcoholic === 'Alcoholic' ? 'alco-coctail' : 'non-coctail'\r\n    const classes = classnames('coctail',alco)\r\n    if(error) {\r\n        return (\r\n            <Error/>\r\n        )\r\n    }\r\n    if(reload) {\r\n        return (\r\n            <div className=\" fake-coctail coctail\">\r\n                <DotLoader/>\r\n            </div>\r\n        )\r\n    }\r\n    return(\r\n        <div className={classes}>\r\n               \r\n                <Title\r\n                name={name} \r\n                description={alcoholic}/>\r\n            <Visual\r\n                src={src}\r\n                title_ingridients='Ingredients'\r\n                ingredients={ingredients}\r\n                glass={glass}\r\n                onClick={onClickIngredient}\r\n            />\r\n            <Instructions\r\n                title='Instruction:'\r\n                instruction={instruction}\r\n            />\r\n        </div>\r\n    )\r\n}\r\nexport default Coctail\r\n","import React from 'react'\r\nimport classnames  from 'classnames'\r\nconst ContainerItemComp = ({children, className}) => {\r\n    const classes = classnames('container-item', className);\r\n    return(\r\n        <div className={classes}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\nexport default ContainerItemComp","import React from 'react'\r\nimport './ContainerComp.css'\r\nconst ContainerComp = ({children}) => {\r\n    return(\r\n        <div className=\"container\">\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\nexport default ContainerComp","\r\nexport const INGREDIENT_LISTING = \"ingredient-listing\";\r\nexport const PREFIX_INGREDIENT= 'strIngredient'\r\nexport const PREFIX_DRINK = 'strDrink';\r\nexport const COCTAIL_TITLE = 'Coctailâs';\r\nexport const INGREDIENT_TITLE = 'Ingredientâs';\r\nexport const PLACEHOLDER_NAME = 'Search coctail by name';\r\nexport const PLACEHOLDER_INGREDIENT = 'Search coctail by ingredient';\r\nexport const toJSON = response => response.json();\r\nexport const INGREDIENT_TITLE_DESCRIPTION = 'Clicking on an item displays a list of cocktails with the selected ingredient';\r\nexport const COCTAIL_LISTING_DESCRIPTION = 'When you click on an object, the selected drink is displayed'","import React from 'react'\r\nimport './ListingItem.css'\r\nconst ListingItem = ({item, onClick}) => {\r\n    return(\r\n        <li onClick={onClick}>{item}</li>\r\n    )\r\n}\r\nexport default ListingItem","import React, { useState, useEffect } from 'react'\r\nimport './ListingEl.css'\r\nimport Loader from '../Loader/Loader'\r\nimport {toJSON} from '../../constants'\r\nimport ListingItem from '../ListingItem/ListingItem'\r\nimport Title from '../Title/Title'\r\nconst ListingEl = ({listing, prefix, onClick, className, title, description}) => {\r\n    const [spisok, setSpisok] = useState([])\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    useEffect(()=>{\r\n        getIngredientList()\r\n\r\n    },[])\r\n    const getIngredientList = async () => {\r\n        setLoading(true)\r\n        try{\r\n            const ingList =  await fetch('https://www.thecocktaildb.com/api/json/v1/1/list.php?i=list')\r\n                        .then(toJSON)\r\n        setSpisok(ingList.drinks)\r\n        setLoading(false)\r\n        }catch(e){\r\n\r\n        }\r\n    }\r\n\r\n    if(prefix==='strDrink'){\r\n        \r\n    }else {\r\n        listing = spisok\r\n    }\r\n    \r\n    if(loading){\r\n        return <Loader/>\r\n    }\r\n    \r\n    return (\r\n        <div className={className}>\r\n            <Title\r\n                name={title}\r\n                className='fixed'\r\n                description={description}\r\n            />\r\n            <ul>\r\n            {listing.map((item)=>{\r\n                    const listItem = prefix==='strDrink' ? item.strDrink : item.strIngredient1\r\n                return <ListingItem\r\n                        item={listItem}\r\n                        onClick={()=>{onClick(listItem)}}\r\n            />\r\n            })}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\nexport default ListingEl","import React from 'react'\r\nimport classnames  from 'classnames'\r\nimport './input.css'\r\nconst Input = ({onChange, onKeyPress, value, type='text', checked, id, placeholder, error}) => {\r\n    const errorClass = error ? 'input-error' : null\r\n    const classes = classnames('input',errorClass)\r\n    return(\r\n        <input \r\n        className={classes}\r\n        type={type} \r\n        onChange={onChange}\r\n        onKeyPress={onKeyPress}\r\n        value={value}\r\n        checked={checked}\r\n        id={id}\r\n        placeholder={placeholder}\r\n        />\r\n    )\r\n}\r\nexport default Input","import React from 'react'\r\nimport Input from '../Input/Input'\r\nimport './RadioButton.css'\r\nconst RadioButton =({onChange,  checked, label})=>{\r\n    const id = Math.random().toFixed(3)\r\n    return(\r\n        <div className=\"form_radio\">\r\n            <Input\r\n                type=\"radio\" \r\n                id={id}\r\n                checked={checked}\r\n                onChange={onChange}\r\n            />\r\n            <label htmlFor={id}>{label}</label>\r\n        </div>\r\n    )\r\n}\r\nexport default RadioButton","import React from 'react' \r\nimport './Form.css'\r\nconst Form =({children})=> {\r\n    return(\r\n        <div className=\"form\">\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\nexport default Form","import React from 'react'\r\nimport './Button.css'\r\n\r\nconst Button = ({text, onClick}) => {\r\n    return(\r\n\r\n            <button onClick={onClick} className='button'>\r\n                {/* <img src='http://cdn.onlinewebfonts.com/svg/img_534826.png' alt=\"q\"/> */}\r\n                FIND\r\n            </button>\r\n\r\n    )\r\n}\r\nexport default Button","import React from 'react'\r\nimport RadioButton from '../RadioButton/RadioButton'\r\nimport Input from '../Input/Input'\r\nimport Form from '../Form/Form'\r\nimport Button from '../Button/Button'\r\nimport './Search.css'\r\nconst Search = ({radiodata,inputdata, error}) => {\r\n\r\n    return(\r\n        <div className='search'>\r\n            <Input\r\n                onChange={inputdata.onChange}\r\n                onKeyPress={inputdata.onKeyPress}\r\n                value={inputdata.value}\r\n                placeholder={inputdata.placeholder}\r\n                error={error}\r\n            />\r\n            \r\n            <Form>\r\n            {radiodata.map((item)=>{\r\n                return <RadioButton\r\n                            label={item.label}\r\n                            checked={item.checked}\r\n                            onChange={item.onChange}\r\n                        />\r\n            })}\r\n            <Button\r\n                onClick={()=>{\r\n                    inputdata.onClick(inputdata.value);\r\n                    inputdata.clear('')\r\n                }}\r\n            />\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\nexport default Search","import React,{useState, useEffect} from 'react'\r\nimport Loader from '../component/Loader/Loader'\r\nimport Coctail from '../component/Ð¡octail/Coctail'\r\nimport ContainerItemComp from '../container/ContainerItemComp/ContainerItemComp'\r\nimport ContainerComp from './ContainerComp/ContainerComp'\r\nimport ListingEl from '../component/ListingEl/ListingEl'\r\nimport Search from '../component/Search/Search'\r\nimport {\r\n    INGREDIENT_LISTING,\r\n    PREFIX_INGREDIENT,\r\n    PREFIX_DRINK,\r\n    INGREDIENT_TITLE,\r\n    COCTAIL_TITLE,\r\n    PLACEHOLDER_INGREDIENT,\r\n    PLACEHOLDER_NAME,\r\n    INGREDIENT_TITLE_DESCRIPTION,\r\n    COCTAIL_LISTING_DESCRIPTION,\r\n    toJSON\r\n} from '../constants.js'\r\n\r\n\r\nconst Alco = () => {\r\n    const [random, setRandom] = useState({})\r\n    const [loading, setLoading] = useState(false)\r\n    const [ingredientList, setIngredientLis] = useState([])\r\n    const [searchCoctailInput, setSearchCoctailInput] = useState('')\r\n    const [error, setError] = useState(false)\r\n    const [coctailList, setCoctailList] = useState([])\r\n    const [searchOption, setSearchOption] = useState(true)\r\n    const [coctailReload, setCoctailReload] = useState(false)\r\n    useEffect(()=>{\r\n        getRandomCoctail()\r\n        // getIngredientList()\r\n        searchCoctailByIngredient()\r\n    },[])\r\n    // const getIngredientList = async () => {\r\n    //     const ingList =  await fetch('https://www.thecocktaildb.com/api/json/v1/1/list.php?i=list')\r\n    //                     .then(toJSON)\r\n    //     setIngredientLis(ingList.drinks)\r\n    // }\r\n\r\n    const getRandomCoctail = async () => {\r\n        setLoading(true)\r\n       try{\r\n        const response = await fetch('https://www.thecocktaildb.com/api/json/v1/1/random.php')\r\n                        .then(toJSON)\r\n            console.log(response)\r\n            setRandom(response.drinks[0])\r\n            setTimeout(()=>{setLoading(false)}, 1500)\r\n       }catch(e){\r\n            console.log(e);\r\n       }\r\n    }\r\n    const getIngredient = (coctail) => {\r\n        const ingridient = []\r\n    Object.entries(random).filter((item)=>{\r\n\r\n        if(item[0].substr(0,13) === 'strIngredient' && item[1] != null) {\r\n            ingridient.push(item[1])\r\n        }\r\n        // return item[0].substr(0,13) === 'strIngredient' && item[1] != null\r\n     \r\n    })\r\n    return ingridient\r\n    }\r\n    \r\n    const coctailInputChangeHandler = e => {\r\n        setSearchCoctailInput(e.target.value)\r\n    }\r\n    const searchCoctailHandler = ({ key }) => {\r\n        if (key === 'Enter') {\r\n            finalCoctailSearch(searchCoctailInput)\r\n            setSearchCoctailInput('')\r\n        }\r\n    }\r\n    const searchCoctail = async (coctail) =>{\r\n        setCoctailReload(true)\r\n        try{\r\n            const response = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/search.php?s=${coctail}`)\r\n                                .then(toJSON)\r\n        setRandom(response.drinks[0])\r\n        setError(false)\r\n        setCoctailReload(false)\r\n        }catch(e){\r\n            setError(true)\r\n\r\n        }\r\n    }\r\n    const searchCoctailByIngredient = async  (ingredient = 'Vodka') =>{\r\n        try{\r\n            const response = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${ingredient}`)\r\n                                .then(toJSON)\r\n            setCoctailList(response.drinks)\r\n            \r\n        }catch(e){\r\n            console.log()\r\n        }\r\n    }\r\n    const ingridient = getIngredient(random)\r\n    const inputPlaceholder =  searchOption ? PLACEHOLDER_INGREDIENT : PLACEHOLDER_NAME\r\n    const finalCoctailSearch = (input)=> {\r\n        searchOption ? searchCoctailByIngredient(input) : searchCoctail(input)\r\n    }\r\n    const RadioData = [\r\n        {\r\n            label: 'ingredient',\r\n            checked: searchOption,\r\n            onChange: ()=>{setSearchOption(true)}\r\n        },\r\n        {\r\n            label: 'name',\r\n            checked: !searchOption,\r\n            onChange: ()=>{setSearchOption(false)}\r\n        }\r\n    ]\r\n    const InputData = {\r\n        onChange: coctailInputChangeHandler,\r\n        onKeyPress:searchCoctailHandler,\r\n        value:searchCoctailInput,\r\n        placeholder: inputPlaceholder,\r\n        onClick: finalCoctailSearch,\r\n        clear: setSearchCoctailInput\r\n    }\r\n    if(loading){\r\n        return <Loader/>\r\n    }\r\n    console.log(searchOption)\r\n    return(\r\n        <div className=\"application\">\r\n                <ContainerComp>\r\n                        <ContainerItemComp>\r\n                                        \r\n                                        <ListingEl \r\n                                            className={INGREDIENT_LISTING}\r\n                                            listing={coctailList}\r\n                                            prefix={PREFIX_DRINK}\r\n                                            onClick={searchCoctail}\r\n                                            title={COCTAIL_TITLE}\r\n                                            description={COCTAIL_LISTING_DESCRIPTION}\r\n                                        />\r\n                        </ContainerItemComp>\r\n                        <ContainerItemComp className={'container-item_center'}>\r\n                                    <Search\r\n                                            radiodata={RadioData}\r\n                                            inputdata={InputData}\r\n                                            error={error}\r\n                                    />\r\n                                    <Coctail\r\n                                    src={random.strDrinkThumb}\r\n                                    name={random.strDrink}\r\n                                    alcoholic={random.strAlcoholic}\r\n                                    glass={random.strGlass}\r\n                                    instruction={random.strInstructions}\r\n                                    ingredients={ingridient}\r\n                                    error={error}\r\n                                    onClickIngredient={searchCoctailByIngredient}\r\n                                    reload={coctailReload}\r\n                                />\r\n                        </ContainerItemComp>\r\n                        <ContainerItemComp>\r\n                                        <ListingEl \r\n                                            className={INGREDIENT_LISTING}\r\n                                            listing\r\n                                            prefix={PREFIX_INGREDIENT}\r\n                                            onClick={searchCoctailByIngredient}\r\n                                            title={INGREDIENT_TITLE}\r\n                                            description={INGREDIENT_TITLE_DESCRIPTION}\r\n                                        />\r\n                        </ContainerItemComp>\r\n                </ContainerComp>\r\n        </div>\r\n    )\r\n}\r\nexport default  Alco","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport Alco from './container/Alco'\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n\r\n        <Alco/>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}